plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
}

group = 'com.chetan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    integrationtestImplementation.extendsFrom testImplementation
    integrationtestRuntime.extendsFrom testRuntime, testRuntimeOnly
    integrationtestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'

    compileOnly 'org.projectlombok:lombok:1.18.20'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'

    developmentOnly 'org.springdoc:springdoc-openapi-ui:1.5.12'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    integrationtestImplementation 'io.rest-assured:rest-assured:4.4.0'
    integrationtestImplementation 'io.rest-assured:json-path:4.4.0'
    integrationtestImplementation 'org.hamcrest:hamcrest-all:1.3'
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationtest {
        java.srcDir "$projectDir/src/integrationtest/java"
        resources.srcDir "$projectDir/src/integrationtest/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationtest.output.classesDirs
    classpath = sourceSets.integrationtest.runtimeClasspath
}

integrationTest {
    useJUnitPlatform()
}

check.dependsOn integrationTest